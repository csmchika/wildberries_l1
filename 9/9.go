package main

import (
	"fmt"
	"sync"
	"time"
)

/*
Разработать конвейер чисел. Даны два канала: в первый пишутся числа (x) из массива, во второй — результат операции x*2,
после чего данные из второго канала должны выводиться в stdout
*/
func main() {
	c1 := make(chan int) //Создание первого канала
	c2 := make(chan int) //Создание второго канала
	arr := []int{1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12}
	wg := sync.WaitGroup{} //Создание WaitGroup

	go func() {
		for _, n := range arr {
			wg.Add(1) //Добавление процесса
			c1 <- n   //Запись щначений в канал 1
		}

		close(c1) //Закрытие канала после окончание записи
	}()

	go func() {
		//Чтение из канала c1 и возведение в квадрат
		for n := range c1 {
			n = n * n
			c2 <- n //Запись квадратов в канал 2
		}

		close(c2) //Закрытие канала после окончание записи
	}()

	go func() {
		//Чтение из канала c2 и вывод
		for n := range c2 {
			fmt.Println(n)
			wg.Done()
		}
	}()

	time.Sleep(1 * time.Millisecond) //Короткая остановка, чтобы WaitGroup добавилась наверняка
	wg.Wait()                        //Ожидание завершения работы всех горутин
}
